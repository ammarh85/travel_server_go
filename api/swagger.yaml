swagger: '2.0'
info:
  description: Server Side information pertaining to Travel Conceriage.
  version: 1.0.0
  title: Travel Conseriage
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: ammar.haris@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:8080'
basePath: /v2
tags:
  - name: user
    description: Everything about the Users
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: package
    description: Access to Travel Packages
  - name: agents
    description: Operations about agents
    externalDocs:
      description: Find out more about agent registration
      url: 'http://swagger.io'
schemes:
  - http
paths:
  /user:
    post:
      tags:
        - user
      summary: Register a new user
      description: New user Registration
      operationId: addUser
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: User object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
    put:
      tags:
        - user
      summary: Update an existing User
      description: ''
      operationId: updateUser
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Pet object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  /package/inventory:
    get:
      tags:
        - package
      summary: Returns package inventories
      description: Returns list of all packages
      operationId: getInventory
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Package'
      security:
        - api_key: []
  /agent:
    post:
      tags:
        - agent
      summary: Create Agent
      description: This can only be done by the logged in user.
      operationId: createAgent
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/Agent'
      responses:
        default:
          description: successful operation
  /agent/createWithArray:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      description: ''
      operationId: createUsersWithArrayInput
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Agent'
      responses:
        default:
          description: successful operation
  /agent/createWithList:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      description: ''
      operationId: createUsersWithListInput
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Agent'
      responses:
        default:
          description: successful operation
  /agent/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:pets': modify pets in your account
      'read:pets': read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Package:
    type: object
    properties:
      id:
        type: integer
        format: int64
      agentId:
        type: integer
        format: int64
      price:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Package Status
        enum:
          - active
          - archived
          - pending
      isValid:
        type: boolean
        default: false
    xml:
      name: Package
  Agent:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Agent
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Travel Conceriage
  url: 'http://travelfoo.io'
